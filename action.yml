name: "Universal CI checks"
description: "A GitHub Action to run plethora of CI checks"
author: "grumpper"

inputs:
  # Python related version setup
  python_version:
    description: "Python version to use"
    required: false
    default: "3.x"
  pylint_version:
    description: "pylint version to use"
    required: false
    default: ""
  bandit_version:
    description: "Bandit version to use"
    required: false
    default: ""
  # Terraform related version setup
  terraform_version:
    description: "Terraform version to use"
    required: false
    default: "latest"
  tflint_version:
    description: "TFLint version to use"
    required: false
    default: "latest"
  # Python related feature setup
  python_checks:
    description: 'Enable python checks as a whole'
    required: false
    default: true
  pylint_checks:
    description: 'Enable python's pylint checks'
    required: false
    default: true
  bandit_checks:
    description: 'Enable python's bandit checks'
    required: false
    default: true
  # Terraform related feature setup
  terraform_checks:
    description: 'Enable terraform checks as a whole'
    required: false
    default: true
  terraform_fmt_checks:
    description: 'Enable terraform's fmt checks'
    required: false
    default: true
  tflint_checks:
    description: 'Enable terraform's TFLint checks'
    required: false
    default: true
  trivy_checks:
    description: 'Enable terraform's Trivy checks'
    required: false
    default: true

runs:
  using: "composite"
  steps:
    # Setup Python related tooling
    - name: Set up Python
      if: ${{ inputs.python_checks }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}
    - name: Setup pylint
      if: ${{ inputs.python_checks && inputs.pylint_checks }}
      run: |
        python -m pip install --upgrade pip
        pip install pylint$PYLINT_VERSION
      env:
        PYLINT_VERSION: ${{ inputs.pylint_version }}
    - name: Setup bandit
      if: ${{ inputs.python_checks && inputs.bandit_checks }}
      run: |
        python -m pip install --upgrade pip
        pip install bandit$BANDIT_VERSION
      env:
        BANDIT_VERSION: ${{ inputs.bandit_version }}
    # Setup Terraform related tooling
    - name: Set up Terraform
      if: ${{ inputs.terraform_checks }}
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Set up TFLint
      if: ${{ inputs.terraform_checks && inputs.tflint_checks }}
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: ${{ inputs.tflint_version }}
    # Python checks
    - name: Run Pylint
      if: ${{ inputs.python_checks && inputs.pylint_checks }}
      run: |
        pylint --rcfile .pylintrc ./
    - name: Run Bandit
      if: ${{ inputs.python_checks && inputs.bandit_checks }}
      run: |
        bandit -c .bandit.yml -r .
    # Terraform checks
    - name: Run terraform fmt
      if: ${{ inputs.terraform_checks && inputs.terraform_fmt_checks }}
      run: |
        terraform fmt -recursive
    - name: Run TFLint
      if: ${{ inputs.terraform_checks && inputs.tflint_checks }}
      run: |
        tflint -c .tflint.hcl --init
        tflint -c .tflint.hcl --recursive
    - name: Run Trivy
      if: ${{ inputs.terraform_checks && inputs.trivy_checks }}
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'config'
        hide-progress: true
        trivy-config: '.trivy.yaml'

branding:
  icon: 'underline'
  color: 'blue'

